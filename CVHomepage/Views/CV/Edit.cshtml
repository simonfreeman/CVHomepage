@model CVHomepage.Models.CV

@{
    ViewBag.Title = "Editing " + @Model.Name;
}

<h1>Editing "@Model.Name"</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.User)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Skills, "Skills", new { @class = "control-label col-md-3" })
            <div class="col-md-offset-1">
                <br />
                @{
                    <table class="cvskills">
                        <tr>
                            <th>Name</th>
                            <th>CV Text</th>
                            <th>Remove Skill?</th>
                        @foreach (var skill in Model.Skills)
                        {
                            <tr>
                                <th>@skill.Name</th>
                                <td>@skill.CVText</td>
                                <td>
                                    <input type="checkbox"
                                         name="removingSkills"
                                        value="@skill.ID"/>
                                </td>
                            </tr>
                        }
                    </table>
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to CV Manager", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
