
@using CVHomepage.Helpers.SessionHelpers;
@model PagedList.IPagedList<CVHomepage.Models.Skill>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Skill Manager";
}

<p class="alert-success "> @ViewBag.message</p>
<h1>Skill Manager</h1>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page }))
<table class="table">
    <tr>
        <th>
            Category
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
        </th>
        
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CVText)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Notes)
        </th>

        <th >
            Tags
        </th>
        <th class="col-md-3"></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.CVText)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @foreach (var tag in item.Tags)
            {
                @Html.DisplayFor(modelItem => tag.Name)
                @Html.Raw(", ")
            }
        </td>
     
        <td>
            @* Make sure they have a cv selected before they try adding skills to it *@

            @if (SessionHelpers.CurrentCV == 0)
            {
                @Html.ActionLink("Select a CV To Add Skills To It", "Index", "CV", new { id = item.ID, url = this.Url }, null) 
            }
            @if (SessionHelpers.CurrentCV != 0)
            {
                if (SessionHelpers.CurrentSkills.Contains(item.ID))
                {
                    string linkText = "Remove from\"" + ViewBag.CVName + "\"";
                    @Html.ActionLink(linkText, "removeSkill", "CV", new { id = item.ID, url = Request.RawUrl }, null)
                }
                else 
                { 
                    string linkText = "Add to \"" + ViewBag.CVName + "\"";
                    @Html.ActionLink(linkText, "AddSkill", "CV", new { id = item.ID, url = Request.RawUrl },null) 
                }
            }
            <br />
            <br />
            <p>Skill Menu</p>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })

        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page }))