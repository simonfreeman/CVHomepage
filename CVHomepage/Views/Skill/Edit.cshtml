@model CVHomepage.Models.Skill

@{
    ViewBag.Title = "Editing " + @Model.Name;
}

<h1>Editing "@Model.Name"</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.User)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes)
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CVText, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CVText)
                @Html.ValidationMessageFor(model => model.CVText)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", String.Empty)
                @Html.ValidationMessageFor(model => model.CategoryID)
            </div>
        </div>

        <div class="form-group">
            
            @Html.LabelFor(model => model.Tags, "Tags", new { @class = "control-label col-md-3" })
            <div class="col-md-offset-1">
                <br/>
                @{
                    int count = 0;
                    foreach (var tag in ViewBag.Tags)
                    {
                        //this if statement simply spaces tags out onto lines after 4 tags so it doesn't look horrible
                        if (count % 4 == 0)
                        {
                            <br />
                        }
                        @tag.Name
                        <input type="checkbox"
                                name="selectedTags"
                                value="@tag.ID"
                                @(Html.Raw(tag.Assigned ? "checked='checked'" : "")) />
                        count++;
                    }
                }
            </div>

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to Skill Manager", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
